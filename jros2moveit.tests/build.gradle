plugins {
    id 'com.diffplug.spotless'
}

apply plugin : 'eclipse'

eclipse.classpath.file {
    // instruct eclipse plugin to put everything to module path
    whenMerged {
        entries.findAll { it.kind == 'lib' }.each { it.entryAttributes['module'] = 'true' }
    }
}

dependencies {
    testImplementation project(':jros2moveit')
    testImplementation 'io.github.pinorobotics:jrosmoveit.tests:2.0-SNAPSHOT'
    testImplementation 'io.github.pinorobotics:jros2rviztools:1.0'
    testImplementation 'io.github.pinorobotics:jros2tf2:2.0-SNAPSHOT'

    def junitVersion = "5.8.1"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testRuntimeOnly 'org.junit.platform:junit-platform-commons:1.7.0'
}

compileTestJava {
    doFirst {
        options.compilerArgs = [
            '--module-path', classpath.asPath
        ]
        classpath = files()
    }
}

test {
    useJUnitPlatform()

    testLogging {
        events "started", "failed"
    }
}

// run spotless and format code before the build
testClasses.dependsOn spotlessApply
